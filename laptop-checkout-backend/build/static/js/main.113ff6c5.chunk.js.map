{"version":3,"sources":["LaptopListView/LaptopListItem.js","General/DateInput.js","General/NameInput.js","LaptopListView/LaptopForm.js","api.js","LaptopListView/EditLaptopForm.js","General/Search.js","LaptopListView/LaptopListView.js","CheckoutView/CheckoutForm.js","CheckoutView/CurrentCheckoutItem.js","CheckoutView/CheckoutHistoryItem.js","CheckoutView/CheckoutHistory.js","General/BackButton.js","CheckoutView/EditCheckoutForm.js","CheckoutView/CheckoutView.js","App.js","serviceWorker.js","index.js"],"names":["laptopStyle","display","width","laptopNameStyle","flex","textAlign","laptopDateStyle","laptopCheckoutStyle","LaptopListItem","laptop","isOverdue","onDelete","onSelect","onEdit","className","onClick","style","name","leaseDate","Date","toLocaleDateString","timeZone","currentCheckout","DateInput","state","dateHasFocus","handleBlur","setState","st","handleFocus","placeholder","this","props","formattedDate","value","type","onChange","onFocus","onBlur","Component","NameInput","hasFocus","LaptopForm","laptopName","handleChange","e","newState","target","handleSubmit","preventDefault","addLaptop","id","URL","process","LAPTOP_URL","CHECKOUT_URL","NOTIFY_URL","getLaptops","a","fetch","then","resp","ok","status","json","data","errorMessage","message","getLaptop","getURL","createLaptop","val","method","headers","Headers","body","JSON","stringify","updateLaptop","updateURL","_id","removeLaptop","deleteURL","createCheckout","updateCheckout","checkout","removeCheckout","removeCheckoutFromHistory","laptop_id","checkout_id","notify","email","notifyOverdue","searchLaptops","query","EditLaptopForm","toISOString","substring","Search","searchQuery","search","clearSearch","LaptopListView","laptops","laptopToUpdate","loadLaptops","apiCalls","newLaptop","updatedLaptop","map","deleteLaptop","filter","enableEditMode","sortLaptops","sort","b","matchingLaptops","allLaptops","key","bind","selectLaptop","dueDate","now","length","CheckoutForm","userName","userEmail","mgrName","addCheckout","CurrentCheckoutItem","emailSent","sendOverdueEmail","loadLaptop","sendReminderEmail","checkoutDate","lastEmailDate","disabled","onReturn","checkoutStyle","nameStyle","padding","dateStyle","dueDateStyle","CheckoutHistoryItem","returnDate","CheckoutHistory","historyLength","deleteCheckout","checkoutId","updateCheckoutHistory","checkoutHistory","slice","checkoutList","renderCheckoutList","BackButton","EditCheckoutForm","CheckoutView","checkoutToUpdate","viewHistory","laptopId","newCheckout","returnLaptop","disableEditMode","enableViewHistory","disableViewHistory","deselectLaptop","renderHistoryView","renderUpdateCheckoutView","renderCheckoutView","App","selectedLaptop","renderLaptopListView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.113ff6c5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst laptopStyle = {\r\n  display:'flex', \r\n  width: '100%'\r\n}\r\n\r\nconst laptopNameStyle = {\r\n  flex:'1', \r\n  textAlign:'left'\r\n}\r\n\r\nconst laptopDateStyle = {\r\n  flex:'1', \r\n  textAlign:'left'\r\n}\r\n\r\nconst laptopCheckoutStyle = {\r\n  flex:'.5',\r\n  textAlign:'left'\r\n}\r\n\r\n\r\nconst LaptopListItem = ({laptop, isOverdue, onDelete, onSelect, onEdit}) => (\r\n  <li className={isOverdue ? \"overdue\" : \"\"}> {/* If laptop is overdue, apply class 'overdue' */}\r\n    <span className=\"delete\" onClick={onDelete}><i className=\"fa fa-trash\"></i></span>\r\n    <span className=\"edit\" onClick={onEdit}><i className=\"fa fa-edit\"></i></span>\r\n    <span onClick={onSelect} style={laptopStyle}>\r\n      <span style={laptopNameStyle}><strong>Laptop: </strong>{laptop.name}</span>\r\n      <span style={laptopDateStyle}>\r\n        <strong> Lease Date: </strong>\r\n        {laptop.leaseDate ? new Date(laptop.leaseDate).toLocaleDateString('en-US', { timeZone: 'UTC' })\r\n          : 'N/A'\r\n        }\r\n      </span>\r\n      <span style={laptopCheckoutStyle}>\r\n        {laptop.currentCheckout ? 'Checked Out'\r\n          : ''\r\n        }\r\n      </span>\r\n    </span>\r\n  </li>\r\n)\r\n\r\nexport default LaptopListItem;","import React, {Component} from 'react';\r\n\r\nclass DateInput extends Component {\r\n\r\n  state = {\r\n    dateHasFocus: false\r\n  };\r\n\r\n  handleBlur = () => {\r\n    // The onBlur DOM event occurs when an object loses focus\r\n    this.setState(st => {\r\n      return {dateHasFocus: false};\r\n    });\r\n  }\r\n\r\n  handleFocus = () => {\r\n    // The onFocus DOM event occurs when an object has focus\r\n    this.setState(st => {\r\n      return {dateHasFocus: true};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var placeholder = this.props.placeholder;\r\n    var formattedDate = new Date(this.props.value).toLocaleDateString('en-US', { timeZone: 'UTC' });\r\n    if(this.props.value) {\r\n      // If value is passed as a prop, render placeholder and formatted value, for example: \"Due Date: 1/2/1999\" where\r\n      // placeholder is \"Due Date\" and value is the date to be formatted\r\n      placeholder = placeholder + ': ' + formattedDate;\r\n    }\r\n    return (\r\n      <input \r\n        name={this.props.name}\r\n        type={this.state.dateHasFocus? 'date' : 'text'}\r\n        value={this.state.dateHasFocus && this.props.value? this.props.value : ''}\r\n        onChange={this.props.onChange}\r\n        placeholder={placeholder}\r\n        onFocus = {this.handleFocus}\r\n        onBlur= {this.handleBlur}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DateInput;","import React, {Component} from 'react';\r\n\r\nclass NameInput extends Component {\r\n\r\n  state = {\r\n    hasFocus: false\r\n  };\r\n\r\n  handleBlur = () => {\r\n    // The onBlur DOM event occurs when an object loses focus\r\n    this.setState(st => {\r\n      return {hasFocus: false};\r\n    });\r\n  }\r\n\r\n  handleFocus = () => {\r\n    // The onFocus DOM event occurs when an object has focus\r\n    this.setState(st => {\r\n      return {hasFocus: true};\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var placeholder = this.props.placeholder;\r\n    if(this.props.value) {\r\n      // If value is passed as a prop, render placeholder and value, for example: \"User Name: Bilbo\" where\r\n      // placeholder is \"User Name\" and value is \"Bilbo\"\r\n      placeholder = placeholder + ': ' + this.props.value;\r\n    }\r\n    return (\r\n      <input \r\n        name={this.props.name}\r\n        type='text'\r\n        value={this.state.hasFocus? this.props.value : ''}\r\n        onChange={this.props.onChange}\r\n        placeholder={placeholder}\r\n        onFocus = {this.handleFocus}\r\n        onBlur= {this.handleBlur}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default NameInput;","import React, {Component} from 'react';\r\nimport DateInput from '../General/DateInput';\r\nimport NameInput from '../General/NameInput';\r\n\r\nclass LaptopForm extends Component {\r\n\r\n  state = {\r\n    laptopName: '',\r\n    leaseDate: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    this.setState(st => {\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create laptop object\r\n    var laptop = {\r\n      name: this.state.laptopName,\r\n      leaseDate: this.state.leaseDate\r\n    }\r\n    // Clear form\r\n    this.setState(st => {\r\n      return {\r\n        laptopName: '',\r\n        leaseDate: ''\r\n      };\r\n    });\r\n    if(this.state.laptopName) {\r\n      // Call addLaptop(), which is passed from LaptopListView as a prop\r\n      this.props.addLaptop(laptop);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"laptopInput\">\r\n        <NameInput\r\n          name='laptopName'\r\n          value={this.state.laptopName}\r\n          onChange={this.handleChange}\r\n          placeholder='Laptop Name'\r\n        />\r\n        <DateInput\r\n          name='leaseDate'\r\n          placeholder='Lease Date'\r\n          value={this.state.leaseDate} \r\n          onChange={this.handleChange}>\r\n        </DateInput>\r\n        <button \r\n          onClick={this.handleSubmit}\r\n        >Add Laptop</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LaptopForm;","var URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8080';\r\nconst LAPTOP_URL = URL + '/api/laptops/';\r\nconst CHECKOUT_URL = URL + '/api/checkouts/';\r\nconst NOTIFY_URL = URL + '/notify/';\r\n\r\n// --------------------------------------------- //\r\n// API functions for making calls to the backend //\r\n// --------------------------------------------- //\r\n\r\nexport async function getLaptops() {\r\n  return fetch(LAPTOP_URL)\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\nexport async function getLaptop(id){\r\n  const getURL = LAPTOP_URL + id;\r\n  return fetch(getURL)\r\n    .then(resp => {\r\n      if(!resp.ok) {\r\n        if(resp.status >= 400 && resp.status < 500){\r\n          return resp.json().then(data => {\r\n            let err = {errorMessage: data.message};\r\n            throw err;\r\n          })\r\n        } else {\r\n          let err = {errorMessage: 'Error: Server is not responding'};\r\n          throw err;\r\n        }\r\n      }\r\n      return resp.json();\r\n  })\r\n}\r\n\r\n\r\nexport async function createLaptop(val) {\r\n  return fetch(LAPTOP_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(val)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function updateLaptop(laptop){\r\n  const updateURL = LAPTOP_URL + laptop._id;\r\n\r\n  return fetch(updateURL, {\r\n    method: 'put',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(laptop)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeLaptop(id){\r\n  const deleteURL = LAPTOP_URL + id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function createCheckout(val) {\r\n  return fetch(CHECKOUT_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(val)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function updateCheckout(checkout){\r\n  const updateURL = CHECKOUT_URL + checkout._id;\r\n\r\n  return fetch(updateURL, {\r\n    method: 'put',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(checkout)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeCheckout(id){\r\n  const deleteURL = CHECKOUT_URL + id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function removeCheckoutFromHistory(laptop_id, checkout_id){\r\n  const deleteURL = LAPTOP_URL + laptop_id + '/history/' + checkout_id;\r\n\r\n  return fetch(deleteURL, {\r\n    method: 'delete'\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function notify(email) {\r\n  return fetch(NOTIFY_URL, {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(email)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function notifyOverdue(email) {\r\n  return fetch(NOTIFY_URL + 'overdue', {\r\n    method: 'post',\r\n    headers: new Headers({\r\n      'Content-Type': 'application/json'\r\n    }),\r\n    body: JSON.stringify(email)\r\n  })\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}\r\n\r\nexport async function searchLaptops(query){\r\n  const getURL = LAPTOP_URL + 'search/' + query;\r\n  return fetch(getURL)\r\n  .then(resp => {\r\n    if(!resp.ok) {\r\n      if(resp.status >= 400 && resp.status < 500){\r\n        return resp.json().then(data => {\r\n          let err = {errorMessage: data.message};\r\n          throw err;\r\n        })\r\n      } else {\r\n        let err = {errorMessage: 'Error: Server is not responding'};\r\n        throw err;\r\n      }\r\n    }\r\n    return resp.json();\r\n  })\r\n}","import React, {Component} from 'react';\r\nimport DateInput from '../General/DateInput';\r\nimport NameInput from '../General/NameInput';\r\n\r\nclass EditLaptopForm extends Component {\r\n\r\n  state = {\r\n    laptopName: this.props.laptop.name,\r\n    leaseDate: this.props.laptop.leaseDate\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Set state with formatted dates\r\n    if(this.props.laptop.leaseDate) {\r\n      this.setState(st => {\r\n        return {leaseDate: new Date(this.props.laptop.leaseDate).toISOString().substring(0, 10)};\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    this.setState(st => {\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Update laptop object\r\n    var laptop = this.props.laptop;\r\n    laptop.name = this.state.laptopName;\r\n    laptop.leaseDate = this.state.leaseDate;\r\n    \r\n    // Call updateLaptop(), which is passed from LaptopListView as a prop\r\n    if(this.state.laptopName) {\r\n      this.props.updateLaptop(laptop);\r\n    }\r\n\r\n    // Clear form\r\n    this.setState(st => {\r\n      return {\r\n        laptopName: '',\r\n        leaseDate: ''\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if(this.props.laptop) {\r\n      return (\r\n        <form id=\"laptopInput\">\r\n          <NameInput\r\n            name='laptopName'\r\n            value={this.state.laptopName}\r\n            onChange={this.handleChange}\r\n            placeholder='Laptop Name'\r\n          />\r\n          <DateInput\r\n            name='leaseDate'\r\n            placeholder='Lease Date'\r\n            value={this.state.leaseDate} \r\n            onChange={this.handleChange}>\r\n          </DateInput>\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Update Laptop</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditLaptopForm;","import React, {Component} from 'react';\r\n\r\nclass Search extends Component {\r\n\r\n  state = {\r\n    searchQuery: ''\r\n  };\r\n\r\n  handleChange = async(e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    await this.setState(st => {\r\n      return newState;\r\n    });\r\n    // Call search(), which is passed to this component as a prop\r\n    this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  handleSubmit = async(e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n\r\n    // Call search(), which is passed to this component as a prop\r\n    await this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  clearSearch = async(e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    this.setState(st => {\r\n      return { searchQuery: '' };\r\n    });\r\n    await this.props.search(this.state.searchQuery);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"searchForm\">\r\n        <input\r\n          type='text'\r\n          name='searchQuery'\r\n          value={this.state.searchQuery}\r\n          onChange={this.handleChange}\r\n          placeholder='Search'\r\n        />\r\n        <input type='submit' onClick={this.handleSubmit} style={{display: 'none'}}></input>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport LaptopListItem from './LaptopListItem';\r\nimport LaptopForm from './LaptopForm';\r\nimport * as apiCalls from '../api';\r\nimport EditLaptopForm from './EditLaptopForm';\r\nimport Search from '../General/Search';\r\n\r\nclass LaptopListView extends Component {\r\n\r\n  state = {\r\n    laptops: [], // An array of all laptops to display in the list\r\n    laptopToUpdate: null // Laptop that is selected for editing (initially null)\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadLaptops();\r\n  }\r\n\r\n  loadLaptops = async() => {\r\n    // Get all laptops and set state\r\n    let laptops = await apiCalls.getLaptops();\r\n    this.setState(st => {\r\n      return {laptops};\r\n    });\r\n  }\r\n\r\n  addLaptop = async(val) => {\r\n    // Create new laptop and update state\r\n    let newLaptop = await apiCalls.createLaptop(val);\r\n    this.setState(st => {\r\n      return {laptops: [...this.state.laptops, newLaptop]};\r\n    });\r\n  }\r\n\r\n  updateLaptop = async(laptop) => {\r\n    // Update laptop\r\n    let updatedLaptop = await apiCalls.updateLaptop(laptop);\r\n    // Find laptop in laptops and replace it with updatedLaptop\r\n    const laptops = this.state.laptops.map(laptop => {\r\n      return (laptop._id === updatedLaptop._id ? updatedLaptop : laptop);\r\n    });\r\n    this.setState(st => {\r\n      return {laptops: laptops, laptopToUpdate: null};\r\n    });\r\n  }\r\n\r\n  deleteLaptop = async(id) => {\r\n    // Delete laptop\r\n    await apiCalls.removeLaptop(id);\r\n    // Update state to reflect deletion\r\n    const laptops = this.state.laptops.filter(laptop => laptop._id !== id);\r\n    this.setState(st => {\r\n      return {laptops: laptops};\r\n    });\r\n  }\r\n\r\n  enableEditMode = async(laptop) => {\r\n    // Set laptopToUpdate to laptop\r\n    await this.setState(st => {\r\n      return {laptopToUpdate: null};\r\n    });\r\n    this.setState(st => {\r\n      return {laptopToUpdate: {...laptop}};\r\n    });\r\n  }\r\n\r\n  // Sort laptops by leaseDate\r\n  sortLaptops = (laptops) => {\r\n    laptops.sort(function(a, b) {\r\n      // If a laptop doesn't have a leaseDate, it should be at the bottom of the list\r\n      if(a.leaseDate && b.leaseDate) {\r\n        return new Date(a.leaseDate) - new Date(b.leaseDate);\r\n      }\r\n      return new Date(b.leaseDate) - new Date(a.leaseDate);\r\n    });\r\n    return laptops;\r\n  }\r\n\r\n  searchLaptops = async(query) => {\r\n    if(query !== '') {\r\n      let matchingLaptops = await apiCalls.searchLaptops(query);\r\n      this.setState(st => {\r\n        return {laptops: matchingLaptops};\r\n      });\r\n    } else {\r\n      let allLaptops = await apiCalls.getLaptops();\r\n      this.setState(st => {\r\n        return {laptops: allLaptops};\r\n      });\r\n    }\r\n  }\r\n\r\n  render(){\r\n    // For each laptop in laptops, create a LaptopItem\r\n    var sortedLaptops = this.sortLaptops(this.state.laptops);\r\n    const laptops = sortedLaptops.map((laptop) => (\r\n      <LaptopListItem\r\n        key={laptop._id}\r\n        laptop={laptop}\r\n        onDelete={this.deleteLaptop.bind(this, laptop._id)}\r\n        // selectLaptop() is passed from App as a prop\r\n        onSelect={this.props.selectLaptop.bind(this, laptop._id)}\r\n        onEdit={this.enableEditMode.bind(this, laptop)}\r\n        // If laptop is currently checked out, and the current date is past the dueDate, set isOverdue to true\r\n        isOverdue={laptop.currentCheckout && new Date(laptop.currentCheckout.dueDate) < Date.now()}\r\n      />\r\n    ));\r\n    return (\r\n      <section id=\"laptopView\">\r\n        <h1>MAI</h1>\r\n        <h2><i className=\"fa fa-laptop\"></i> laptop<span>checkout</span></h2>\r\n        <Search search={this.searchLaptops}/>\r\n        { this.state.laptops && this.state.laptops.length > 0 ?\r\n          <ul id=\"laptopList\">\r\n            {laptops}\r\n          </ul>\r\n          : <h3>No laptops found!</h3>\r\n        }\r\n        {\r\n          // If there is a laptopToUpdate, render EditLaptopForm. Otherwise, render LaptopForm for adding new laptops\r\n          (this.state.laptopToUpdate ? \r\n            <EditLaptopForm laptop={this.state.laptopToUpdate} updateLaptop={this.updateLaptop}/> \r\n            : \r\n            <LaptopForm addLaptop={this.addLaptop} />\r\n          )\r\n        }\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LaptopListView;\r\n","import React, {Component} from 'react';\r\nimport DateInput from '../General/DateInput';\r\nimport NameInput from '../General/NameInput';\r\n\r\nclass CheckoutForm extends Component {\r\n\r\n  state = {\r\n    userName: '',\r\n    userEmail: '',\r\n    mgrName: '',\r\n    dueDate: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    this.setState(st => {\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create checkout object\r\n    var checkout = {\r\n      userName: this.state.userName,\r\n      userEmail: this.state.userEmail,\r\n      mgrName: this.state.mgrName,\r\n      dueDate: this.state.dueDate\r\n    }\r\n    if(this.state.userName && this.state.mgrName && this.state.dueDate) {\r\n      // Call addCheckout(), which is passed from CheckoutView as a prop\r\n      this.props.addCheckout(checkout);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section id=\"checkoutForm\">\r\n        <h3 id=\"available\">Available</h3>\r\n        <form id=\"checkoutInput\">\r\n          <NameInput\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='User Name'\r\n          />\r\n          <NameInput\r\n            name='userEmail'\r\n            value={this.state.userEmail}\r\n            onChange={this.handleChange}\r\n            placeholder='Email'\r\n          />\r\n          <NameInput \r\n            name='mgrName'\r\n            value={this.state.mgrName}\r\n            onChange={this.handleChange}\r\n            placeholder='Approved By'\r\n          />\r\n          <DateInput\r\n            name='dueDate'\r\n            placeholder='Due Date'\r\n            value={this.state.dueDate} \r\n            onChange={this.handleChange}>\r\n          </DateInput>\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Check out</button>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckoutForm;","import React, {Component} from 'react';\r\nimport * as apiCalls from '../api';\r\n\r\nclass CurrentCheckoutItem extends Component {\r\n\r\n  state = {\r\n    emailSent: false\r\n  }\r\n\r\n  sendOverdueEmail = async() => {\r\n    await apiCalls.notifyOverdue(this.props.laptop);\r\n    this.setState(st => {\r\n      return {emailSent: true};\r\n    });\r\n    this.props.loadLaptop();\r\n  }\r\n\r\n  sendReminderEmail = async() => {\r\n    await apiCalls.notify(this.props.laptop);\r\n    this.setState(st => {\r\n      return {emailSent: true}\r\n    });\r\n    this.props.loadLaptop();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"currentCheckout\">\r\n        <h3>Checked out to:</h3>\r\n        <div id=\"currentCheckoutInfo\">\r\n          <span className=\"edit\" onClick={this.props.onEdit}><i className=\"fa fa-edit\"></i></span>\r\n          <p>\r\n            Name: {this.props.checkout.userName} <br />\r\n            Email: {this.props.checkout.userEmail} <br />\r\n            Approved By: {this.props.checkout.mgrName} <br />\r\n            Checked Out: {new Date(this.props.checkout.checkoutDate).toLocaleDateString('en-US', { timeZone: 'UTC' })} <br />\r\n            Due Date: {new Date(this.props.checkout.dueDate).toLocaleDateString('en-US', { timeZone: 'UTC' })} <br /> <br />\r\n          </p>\r\n        </div>\r\n        { this.props.checkout.lastEmailDate ?\r\n          <i>Last Notified On: {new Date(this.props.checkout.lastEmailDate).toLocaleDateString('en-US', { timeZone: 'UTC' })}</i>\r\n          : ''\r\n        }\r\n        {\r\n          !this.state.emailSent && new Date(this.props.checkout.dueDate) < Date.now() ?\r\n            <button id=\"emailButton\" onClick={this.sendOverdueEmail}>Send Overdue Notice</button>\r\n          : ''\r\n        }\r\n        {\r\n          !this.state.emailSent && new Date(this.props.checkout.dueDate) >= Date.now() ?\r\n            <button id=\"emailButton\" onClick={this.sendReminderEmail}>Send Due Date Reminder</button>\r\n          : ''\r\n        }\r\n        {\r\n          this.state.emailSent ? <button id=\"emailButton\" disabled>Notification Sent</button>\r\n          : ''\r\n        }\r\n        <button id=\"returnButton\" onClick={this.props.onReturn}>Return Laptop</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CurrentCheckoutItem;","import React from 'react';\r\n\r\nconst checkoutStyle = {\r\n  display:'flex', \r\n  width: '100%'\r\n}\r\n\r\nconst nameStyle = {\r\n  flex:'1',\r\n  textAlign:'left',\r\n  padding:'0 40px 0 0',\r\n  width: '100%'\r\n};\r\n\r\nconst dateStyle = {\r\n  flex:'.7',\r\n  textAlign:'left',\r\n  width: '100%'\r\n};\r\n\r\nconst dueDateStyle = {\r\n  flex:'.5',\r\n  textAlign:'left',\r\n  padding:'0 40px',\r\n  width: '100%'\r\n};\r\n\r\nconst CheckoutHistoryItem = ({checkout, onDelete, onEdit}) => (\r\n  <li>\r\n    <span className=\"delete\" onClick={onDelete}><i className=\"fa fa-trash\"></i></span>\r\n    <span className=\"edit\" onClick={onEdit}><i className=\"fa fa-edit\"></i></span>\r\n    <span style={checkoutStyle}>\r\n      <span style={nameStyle}><strong>Name:</strong> {checkout.userName}</span>\r\n      <span style={nameStyle}><strong>Approved By:</strong> {checkout.mgrName}</span>\r\n      <span style={dateStyle}><strong>Checked Out:</strong> {new Date(checkout.checkoutDate).toLocaleDateString('en-US', { timeZone: 'UTC' })}</span>\r\n      <span style={dueDateStyle}><strong>Due:</strong> {new Date(checkout.dueDate).toLocaleDateString('en-US', { timeZone: 'UTC' })}</span>\r\n      <span style={dateStyle}><strong>Returned:</strong> {new Date(checkout.returnDate).toLocaleDateString('en-US', { timeZone: 'UTC' })}</span>\r\n    </span>\r\n  </li>\r\n)\r\n\r\nexport default CheckoutHistoryItem;","import React, {Component} from 'react';\r\nimport CheckoutHistoryItem from './CheckoutHistoryItem';\r\nimport * as apiCalls from '../api';\r\nimport '../css/CheckoutHistory.css';\r\n\r\nclass CheckoutHistory extends Component {\r\n\r\n  state = {\r\n    historyLength: 5\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    this.setState(st => {\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  deleteCheckout = async(checkoutId) => {\r\n    // Remove checkout from selected laptop's history\r\n    await apiCalls.removeCheckoutFromHistory(this.props.laptop._id, checkoutId)\r\n    // Delete checkout\r\n    await apiCalls.removeCheckout(checkoutId);\r\n    // Update state in CheckoutView\r\n    this.props.updateCheckoutHistory();\r\n  }\r\n  \r\n  renderCheckoutList(checkoutHistory) {\r\n    // If there is a currentCheckout, do not include it in checkoutHistory\r\n    if(this.props.laptop.currentCheckout) {\r\n      checkoutHistory = checkoutHistory.filter(checkout => checkout._id !== this.props.laptop.currentCheckout._id);\r\n    }\r\n    \r\n    // Show most recent checkouts first\r\n    checkoutHistory.sort(function(a, b) {\r\n      return new Date(b.returnDate) - new Date(a.returnDate);\r\n    });\r\n\r\n    // If historyLength is specified, only display that many history items\r\n    if(this.state.historyLength > 0) {\r\n      checkoutHistory = checkoutHistory.slice(0, this.state.historyLength);\r\n    }\r\n\r\n    // For each checkout in checkoutHistory, render a CheckoutHistoryItem\r\n    const checkoutList = checkoutHistory.map((checkout) => (\r\n      <CheckoutHistoryItem\r\n        key={checkout._id}\r\n        checkout={checkout}\r\n        onDelete={this.deleteCheckout.bind(this, checkout._id)}\r\n        onEdit={this.props.enableEditMode.bind(this, checkout)}\r\n      />\r\n    ));\r\n    return (\r\n      <div>\r\n        <h3 id=\"checkoutHistoryTitle\">\r\n          Checkout History\r\n          {this.state.historyLength > 0 ? \r\n            ' (Last ' + this.state.historyLength + ' Checkouts)'\r\n            : ' (All Checkouts)'\r\n          }\r\n        </h3>\r\n\r\n          <select id='historySelect' name='historyLength' onChange = {this.handleChange}>\r\n            <option value={5}>5 Checkouts</option>\r\n            <option value={10}>10 Checkouts</option>\r\n            <option value={20}>20 Checkouts</option>\r\n            <option value={0}>All Checkouts</option>\r\n          </select>\r\n\r\n        <ul id=\"checkoutList\">\r\n          {checkoutList}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  render(){\r\n    return this.renderCheckoutList(this.props.laptop.checkoutHistory);\r\n  }\r\n}\r\n  \r\nexport default CheckoutHistory;\r\n  ","import React from 'react';\r\n\r\nconst BackButton = ({onClick}) => (\r\n    <div onClick={onClick} className=\"leftAlign\"><i id=\"homeButton\" className=\"fa fa-arrow-left fa-2x\"></i></div>\r\n)\r\n\r\nexport default BackButton;","import React, {Component} from 'react';\r\nimport DateInput from '../General/DateInput';\r\nimport NameInput from '../General/NameInput';\r\n\r\nclass EditCheckoutForm extends Component {\r\n\r\n  state = {\r\n    userName: this.props.checkout.userName,\r\n    userEmail: this.props.checkout.userEmail,\r\n    mgrName: this.props.checkout.mgrName,\r\n    dueDate: '',\r\n    checkoutDate: '',\r\n    returnDate: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Set state with formatted dates\r\n    if(this.props.checkout.dueDate) {\r\n      this.setState(st => {\r\n        return {dueDate: new Date(this.props.checkout.dueDate).toISOString().substring(0, 10)};\r\n      });\r\n    }\r\n    if(this.props.checkout.checkoutDate) {\r\n      this.setState(st => {\r\n        return {checkoutDate: new Date(this.props.checkout.checkoutDate).toISOString().substring(0, 10)};\r\n      });\r\n    }\r\n    if(this.props.checkout.returnDate) {\r\n      this.setState(st => {\r\n        return {returnDate: new Date(this.props.checkout.returnDate).toISOString().substring(0, 10)};\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // [e.target.name] is a computed property name\r\n    let newState = {[e.target.name]: e.target.value };\r\n    this.setState(st => {\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form from reloading the page on submit\r\n    // Create checkout object with updated form data\r\n    var checkout = this.props.checkout;\r\n      checkout.userName = this.state.userName;\r\n      checkout.userEmail = this.state.userEmail;\r\n      checkout.mgrName = this.state.mgrName;\r\n      checkout.dueDate = this.state.dueDate;\r\n      checkout.checkoutDate = this.state.checkoutDate;\r\n    // Update checkout\r\n    if(this.props.checkout.returnDate) {\r\n      // Check to make sure inputs are not empty\r\n      if(this.state.userName && this.state.mgrName && this.state.dueDate && this.state.checkoutDate && this.state.returnDate && this.state.userEmail) {\r\n        checkout.returnDate = this.state.returnDate;\r\n        this.props.updateCheckout(checkout);\r\n      }\r\n    }\r\n    else if(this.state.userName && this.state.mgrName && this.state.dueDate && this.state.checkoutDate && this.state.userEmail) {\r\n        this.props.updateCheckout(checkout);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    if(this.props.checkout) {\r\n      return (\r\n        <form id=\"checkoutInput\">\r\n          <NameInput\r\n            name='userName'\r\n            value={this.state.userName}\r\n            onChange={this.handleChange}\r\n            placeholder='User Name'\r\n          />\r\n          <NameInput\r\n            name='userEmail'\r\n            value={this.state.userEmail}\r\n            onChange={this.handleChange}\r\n            placeholder='Email'\r\n          />\r\n          <NameInput\r\n            name='mgrName'\r\n            value={this.state.mgrName}\r\n            onChange={this.handleChange}\r\n            placeholder='Approved By'\r\n          />\r\n          <DateInput\r\n            name='checkoutDate'\r\n            placeholder='Checkout Date'\r\n            value={this.state.checkoutDate} \r\n            onChange={this.handleChange} >\r\n          </DateInput>\r\n          <DateInput\r\n            name='dueDate'\r\n            placeholder='Due Date'\r\n            value={this.state.dueDate} \r\n            onChange={this.handleChange} >\r\n          </DateInput>\r\n          {this.props.checkout.returnDate ?\r\n            <DateInput\r\n              name='returnDate'\r\n              placeholder='Return Date'\r\n              value={this.state.returnDate} \r\n              onChange={this.handleChange} >\r\n            </DateInput>\r\n            : ''\r\n          }\r\n          <button \r\n            onClick={this.handleSubmit}\r\n          >Update Checkout</button>\r\n        </form>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default EditCheckoutForm;","import React, {Component} from 'react';\r\nimport * as apiCalls from '../api';\r\nimport CheckoutForm from './CheckoutForm';\r\nimport CurrentCheckoutItem from './CurrentCheckoutItem';\r\nimport CheckoutHistory from './CheckoutHistory';\r\nimport BackButton from '../General/BackButton';\r\nimport EditCheckoutForm from './EditCheckoutForm';\r\n\r\nclass CheckoutView extends Component {\r\n\r\n  state = {\r\n    laptop: null, // The selected laptop\r\n    checkoutToUpdate: null, // Checkout that is selected for editing (initially null)\r\n    viewHistory: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadLaptop();\r\n  }\r\n\r\n  loadLaptop = async() => {\r\n    // Get the selected laptop object, based on the laptopId passed from App\r\n    let laptop = await apiCalls.getLaptop(this.props.laptopId);\r\n    this.setState(st => {\r\n      return {laptop};\r\n    });\r\n  }\r\n\r\n  addCheckout = async(checkout) =>{\r\n    // Create new checkout, and set its laptop to currently selected laptop\r\n    let newCheckout = await apiCalls.createCheckout({...checkout});\r\n    // Update laptop's currentCheckout to newCheckout, and update state\r\n    let updatedLaptop = await apiCalls.updateLaptop({...this.state.laptop, currentCheckout: newCheckout}); // ... is the spread operator\r\n    this.setState(st => {\r\n      return {laptop: {...updatedLaptop}};\r\n    });\r\n  }\r\n\r\n  returnLaptop = async() => {\r\n    // Update currentCheckout's returnDate\r\n    await apiCalls.updateCheckout({...this.state.laptop.currentCheckout, returnDate: Date.now()});\r\n    // Set laptop's currentCheckout to null, and update state\r\n    let updatedLaptop = await apiCalls.updateLaptop({...this.state.laptop, currentCheckout: null}); // ... is the spread operator\r\n    this.setState(st => {\r\n      return {laptop: {...updatedLaptop}};\r\n    });\r\n  }\r\n\r\n  enableEditMode = async(checkout) => {\r\n    // Set checkoutToUpdate to checkout\r\n    if(!this.state.checkoutToUpdate) {\r\n      this.setState(st => {\r\n        return {checkoutToUpdate: {...checkout}};\r\n      });\r\n    }\r\n  }\r\n\r\n  disableEditMode = async() => {\r\n    this.setState(st => {\r\n      return {checkoutToUpdate: null};\r\n    });\r\n  }\r\n\r\n  enableViewHistory = async() => {\r\n    this.setState(st => {\r\n      return {viewHistory: true};\r\n    });\r\n  }\r\n\r\n  disableViewHistory = async() => {\r\n    this.setState(st => {\r\n      return {viewHistory: false};\r\n    });\r\n  }\r\n\r\n  updateCheckout = async(checkout) => {\r\n    // Update checkout\r\n    await apiCalls.updateCheckout(checkout);\r\n    // Update checkoutHistory to reflect updated checkout\r\n    this.loadLaptop();\r\n    // Set checkoutToUpdate to null\r\n    this.setState(st => {\r\n      return {checkoutToUpdate: null};\r\n    });\r\n  }\r\n\r\n  renderCheckoutView() {\r\n    return (\r\n      <section id=\"checkoutView\">\r\n        {/* deselectLaptop() is passed from App. When BackButton is clicked, \r\n        sets selectedLaptop to null, so App will render LaptopListView */}\r\n        <BackButton onClick={this.props.deselectLaptop}></BackButton>\r\n        <h1>Laptop: {this.state.laptop.name}</h1>\r\n        <h3>\r\n          Lease Date: {this.state.laptop.leaseDate ? new Date(this.state.laptop.leaseDate).toLocaleDateString('en-US', { timeZone: 'UTC' })\r\n            : 'N/A'\r\n          }\r\n        </h3>\r\n        { // If there is a currentCheckout and NOT a checkoutToUpdate, render CurrentCheckoutItem\r\n          (this.state.laptop.currentCheckout ?\r\n            <CurrentCheckoutItem\r\n              laptop={this.state.laptop}\r\n              checkout={this.state.laptop.currentCheckout}\r\n              onReturn={this.returnLaptop}\r\n              onEdit={this.enableEditMode.bind(this, this.state.laptop.currentCheckout)}\r\n              loadLaptop={this.loadLaptop}\r\n            /> : ''\r\n          )\r\n        }\r\n        { // If there is NOT a currentCheckout and NOT a checkoutToUpdate, render CheckoutForm to add new checkout\r\n          (\r\n            !this.state.laptop.currentCheckout ?\r\n            <CheckoutForm\r\n              addCheckout={this.addCheckout}\r\n            /> : ''\r\n          )\r\n        }\r\n        <button id=\"historyButton\" onClick={this.enableViewHistory}>Checkout History</button>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  renderUpdateCheckoutView() {\r\n    return(\r\n      <section id=\"checkoutView\">\r\n        <BackButton onClick={this.disableEditMode}></BackButton>\r\n        <h1>Laptop: {this.state.laptop.name}</h1>\r\n        <h3>\r\n          Lease Date: {this.state.laptop.leaseDate ? new Date(this.state.laptop.leaseDate).toLocaleDateString('en-US', { timeZone: 'UTC' })\r\n            : 'N/A'\r\n          }\r\n        </h3>\r\n        <EditCheckoutForm\r\n          updateCheckout={this.updateCheckout}\r\n          checkout={this.state.checkoutToUpdate}\r\n        />\r\n      </section>\r\n    )\r\n  }\r\n\r\n  renderHistoryView() {\r\n    /* Render the laptop's checkout history*/\r\n    return(\r\n      <section id=\"checkoutView\">\r\n        <BackButton onClick={this.disableViewHistory}></BackButton>\r\n        <h1>Laptop: {this.state.laptop.name}</h1>\r\n        <h3>\r\n          Lease Date: {this.state.laptop.leaseDate ? new Date(this.state.laptop.leaseDate).toLocaleDateString('en-US', { timeZone: 'UTC' })\r\n            : 'N/A'\r\n          }\r\n        </h3>\r\n        <CheckoutHistory \r\n          laptop={this.state.laptop} \r\n          updateCheckoutHistory={this.loadLaptop} \r\n          enableEditMode={this.enableEditMode}\r\n        />\r\n      </section>\r\n    )\r\n  }\r\n\r\n  render(){\r\n    if(this.state.laptop && !this.state.viewHistory && !this.state.checkoutToUpdate) { \r\n      return this.renderCheckoutView();\r\n    }\r\n    else if(this.state.laptop && this.state.viewHistory && !this.state.checkoutToUpdate) {\r\n      return this.renderHistoryView();\r\n    }\r\n    else if(this.state.laptop && this.state.checkoutToUpdate) {\r\n      return this.renderUpdateCheckoutView();\r\n    }\r\n    else {\r\n      return (\r\n        <section id=\"checkoutView\">\r\n          <BackButton onClick={this.props.deselectLaptop}></BackButton>\r\n          <h1>Loading...</h1>\r\n        </section>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default CheckoutView;\r\n","import React, { Component } from 'react';\r\nimport LaptopListView from './LaptopListView/LaptopListView';\r\nimport CheckoutView from './CheckoutView/CheckoutView';\r\nimport './css/App.css';\r\nimport './assets/font-awesome/css/font-awesome.min.css';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    selectedLaptop: null // Set when a laptop is selected in LaptopListView\r\n  }\r\n\r\n  selectLaptop = async (laptop) => {\r\n    // Called when a laptop is selected in LaptopListView\r\n    this.setState(st => {\r\n      return {selectedLaptop: laptop};\r\n    });\r\n  }\r\n\r\n  deselectLaptop = async () => {\r\n    // Called when BackButton is clicked in CheckoutView\r\n    this.setState(st => {\r\n      return {selectedLaptop: null};\r\n    });\r\n  }\r\n\r\n  renderLaptopListView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <LaptopListView \r\n          selectLaptop={this.selectLaptop} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCheckoutView() {\r\n    return (\r\n      <div className=\"App\">\r\n        <CheckoutView \r\n          laptopId={this.state.selectedLaptop} \r\n          deselectLaptop={this.deselectLaptop} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    // If a laptop is selected, render its CheckoutView. Otherwise, render LaptopListView\r\n    if(this.state.selectedLaptop){\r\n      return this.renderCheckoutView();\r\n    }\r\n    return this.renderLaptopListView();\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}